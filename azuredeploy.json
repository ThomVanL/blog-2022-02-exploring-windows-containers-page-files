{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1124.51302",
      "templateHash": "13866111031451092500"
    }
  },
  "parameters": {
    "yourIp": {
      "type": "string",
      "metadata": {
        "description": "Your IP"
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine administrator username"
      }
    },
    "vmAdminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Virtual Machine administrator password"
      }
    },
    "acrImageName": {
      "type": "string",
      "defaultValue": "wcowpagefiles:latest",
      "metadata": {
        "description": "The name of the Windows container image we want to build"
      }
    },
    "deploymentLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources in this deployment."
      }
    },
    "acrTaskRunSourceLocation": {
      "type": "string",
      "defaultValue": "https://github.com/ThomVanL/blog-2022-02-exploring-windows-containers-page-files.git#main:WincontainersPageFiles-app",
      "metadata": {
        "description": "URL to the .git file"
      }
    },
    "vmSetupScriptLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/ThomVanL/blog-2022-02-exploring-windows-containers-page-files/main/scripts/Initialize-WinContainersVm.ps1",
      "metadata": {
        "description": "URL to the Initialize-WinContainersVm.ps1 script"
      }
    }
  },
  "variables": {
    "vmSkus": [
      "Standard_D4s_v3",
      "Standard_E4-2s_v4"
    ],
    "uniqueishSuffix": "[uniqueString(resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2021-09-01",
      "name": "[format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5))]",
      "location": "[parameters('deploymentLocation')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/taskRuns",
      "apiVersion": "2019-06-01-preview",
      "name": "[format('{0}/{1}', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)), 'buildAndPush')]",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "runRequest": {
          "agentConfiguration": {
            "cpu": 2
          },
          "type": "DockerBuildRequest",
          "sourceLocation": "[parameters('acrTaskRunSourceLocation')]",
          "dockerFilePath": "Dockerfile",
          "arguments": [
            {
              "name": "SOURCE",
              "value": "./WincontainersPageFiles-app/"
            }
          ],
          "platform": {
            "os": "Windows",
            "architecture": "amd64"
          },
          "imageNames": [
            "[parameters('acrImageName')]"
          ],
          "isPushEnabled": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))]"
      ]
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-09-01",
      "name": "tvl-aci",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "osType": "Windows",
        "sku": "Standard",
        "imageRegistryCredentials": [
          {
            "username": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5))), '2021-09-01').username]",
            "password": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5))), '2021-09-01').passwords[0].value]",
            "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))).loginServer]"
          }
        ],
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "[format('tvlaci{0}', variables('uniqueishSuffix'))]",
          "ports": [
            {
              "port": 80,
              "protocol": "TCP"
            }
          ]
        },
        "containers": [
          {
            "name": "tvl-blog-windowscontainerspagefiles",
            "properties": {
              "image": "[format('{0}/{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))).loginServer, parameters('acrImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 2,
                  "memoryInGB": 8
                },
                "limits": {
                  "cpu": 2,
                  "memoryInGB": 8
                }
              },
              "ports": [
                {
                  "port": 80,
                  "protocol": "TCP"
                }
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))]",
        "[resourceId('Microsoft.ContainerRegistry/registries/taskRuns', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)), 'buildAndPush')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "tvl-asp",
      "location": "[parameters('deploymentLocation')]",
      "sku": {
        "tier": "PremiumV3",
        "name": "P1V3"
      },
      "kind": "windows",
      "properties": {
        "hyperV": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[format('tvl-wcow-page-files-{0}', variables('uniqueishSuffix'))]",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "siteConfig": {
          "appSettings": [
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))).loginServer)]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_USERNAME",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5))), '2021-09-01').username]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5))), '2021-09-01').passwords[0].value]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "WEBSITE_MEMORY_LIMIT_MB",
              "value": "4000"
            }
          ],
          "windowsFxVersion": "[format('DOCKER|{0}/{1}', reference(resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))).loginServer, parameters('acrImageName'))]",
          "use32BitWorkerProcess": false,
          "alwaysOn": true
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', 'tvl-asp')]",
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)))]",
        "[resourceId('Microsoft.ContainerRegistry/registries/taskRuns', format('tvlacr{0}', substring(variables('uniqueishSuffix'), 0, 5)), 'buildAndPush')]",
        "[resourceId('Microsoft.Web/serverfarms', 'tvl-asp')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "tvl-vm-nsg",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_Inbound_Rdp_IpRange",
            "properties": {
              "description": "RDP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('yourIp')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "tvl-vnet",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'tvl-vm-nsg')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'tvl-vm-nsg')]"
      ]
    },
    {
      "copy": {
        "name": "vm_pips",
        "count": "[length(variables('vmSkus'))]"
      },
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[format('tvl-vm-{0:D3}-pip', copyIndex())]",
      "location": "[parameters('deploymentLocation')]",
      "sku": {
        "tier": "Regional",
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "copy": {
        "name": "vm_nics",
        "count": "[length(variables('vmSkus'))]"
      },
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[format('tvl-vm-{0:D3}-nic', copyIndex())]",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'tvl-vnet')).subnets[0].id]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('tvl-vm-{0:D3}-pip', copyIndex()))]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', format('tvl-vm-{0:D3}-pip', copyIndex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'tvl-vnet')]"
      ]
    },
    {
      "copy": {
        "name": "vms",
        "count": "[length(variables('vmSkus'))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-07-01",
      "name": "[format('tvl-vm-{0:D3}', copyIndex())]",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "osProfile": {
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "computerName": "[format('tvl-vm-{0:D3}', copyIndex())]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSkus')[copyIndex()]]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('tvl-vm-{0:D3}-nic', copyIndex()))]"
            }
          ]
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "microsoftvisualstudio",
            "offer": "visualstudio2022",
            "sku": "vs-2022-comm-latest-ws2022",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "deleteOption": "Detach",
            "name": "[format('tvl-vm-{0:D3}-os-{1:D3}', copyIndex(), 1)]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('tvl-vm-{0:D3}-nic', copyIndex()))]"
      ]
    },
    {
      "copy": {
        "name": "vms_setupscript",
        "count": "[length(variables('vmSkus'))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-07-01",
      "name": "[format('{0}/{1}', format('tvl-vm-{0:D3}', copyIndex()), 'Initialize-WinContainersVm')]",
      "location": "[parameters('deploymentLocation')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "skipDos2Unix": false
        },
        "protectedSettings": {
          "fileUris": [
            "[parameters('vmSetupScriptLocation')]"
          ],
          "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File \"Initialize-WinContainersVm.ps1\""
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('tvl-vm-{0:D3}', copyIndex()))]"
      ]
    }
  ]
}